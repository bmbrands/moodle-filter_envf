{"version":3,"file":"userprofileform.min.js","sources":["../src/userprofileform.js"],"sourcesContent":["/**\n * Add the form to the page\n *\n * @module      filter_envf/userprofileform.js\n * @package     filter_envf\n * @copyright   CALL Learning - Laurent David <laurent@call-learning.fr>\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n        'core/str',\n        'core/fragment',\n        'core/templates',\n        'core/ajax',\n        'core/notification'\n    ],\n    function ($,\n              Str,\n              Fragment,\n              Templates,\n              Ajax,\n              Notification\n    ) {\n        var UserForm = function (formelement, contextid, userid) {\n            this.formelementcontainer = formelement;\n            this.contextid = contextid;\n            this.userid = userid;\n            formelement.on('submit', 'form', this.submitFormAjax.bind(this));\n        };\n\n        var validUserFields = [\n            'id',\n            'username',\n            'auth',\n            'suspended',\n            'firstname',\n            'lastname',\n            'email',\n            'maildisplay',\n            'city',\n            'country',\n            'timezone',\n            'description',\n            'userpicture',\n            'firstnamephonetic',\n            'lastnamephonetic',\n            'middlename',\n            'alternatename',\n            'interests',\n            'url',\n            'icq',\n            'skype',\n            'aim',\n            'yahoo',\n            'msn',\n            'idnumber',\n            'institution',\n            'department',\n            'phone1',\n            'phone2',\n            'address',\n            'lang',\n            'calendartype',\n            'theme',\n            'mailformat',\n            'customfields',\n            'preferences',\n        ];\n        /**\n         * Private method\n         *\n         * @method submitFormAjax\n         * @private\n         * @param {Event} e Form submission event.\n         */\n        UserForm.prototype.submitFormAjax = function (e) {\n            // We don't want to do a real form submission.\n            e.preventDefault();\n\n            var changeEvent = document.createEvent('HTMLEvents');\n            changeEvent.initEvent('change', true, true);\n\n            // Prompt all inputs to run their validation functions.\n            // Normally this would happen when the form is submitted, but\n            // since we aren't submitting the form normally we need to run client side\n            // validation.\n            var formelement = $(this.formelementcontainer).find('form');\n            formelement.find(':input').each(function (index, element) {\n                element.dispatchEvent(changeEvent);\n            });\n\n            // Now the change events have run, see if there are any \"invalid\" form fields.\n            var invalid = $.merge(\n                formelement.find('[aria-invalid=\"true\"]'),\n                formelement.find('.error')\n            );\n\n            // If we found invalid fields, focus on the first one and do not submit via ajax.\n            if (invalid.length) {\n                invalid.first().focus();\n                return;\n            }\n            var formelementcontainer = this.formelementcontainer;\n            var formData = JSON.stringify(formelement.serialize());\n            var params = {\n                'jsonformdata': formData\n            };\n            var userform = this;\n            // Reload the form to check for errors.\n            Fragment.loadFragment('filter_envf', 'userprofile_form',\n                this.contextid,\n                params)\n                .then(function (form, js) {\n                    Templates.replaceNodeContents(formelementcontainer, form, js);\n                    if (formelementcontainer.children('.upf-userformvalidated').data('validated')) {\n                        var formDataCombined = $(formelementcontainer.find('form'))\n                            .serializeArray()\n                            .reduce(function (acc, item) {\n                                if (validUserFields.includes(item.name)) {\n                                    acc[item.name] = item.value;\n                                }\n                                return acc;\n                            }, {});\n                        if (typeof formDataCombined['newpassword'] !== undefined)  {\n                            delete formDataCombined['newpassword'];\n                        }\n                        if (typeof formDataCombined['password'] !== undefined)  {\n                            delete formDataCombined['password'];\n                        }\n                        // Now we can continue and send the data...\n                        Ajax.call([{\n                            methodname: 'filter_envf_update_user',\n                            args: {userdata: formDataCombined},\n                            done: userform.handleFormSubmissionResponse.bind(userform, formDataCombined),\n                            fail: userform.handleFormSubmissionFailure.bind(userform, formDataCombined)\n                        }]);\n                    }\n                });\n            // Convert all the form elements values to a serialised string.\n\n        };\n        /**\n         * Private method\n         *\n         * @method handleFormSubmissionResponse\n         * @private\n         * @param {Event} e Form submission success.\n         */\n        UserForm.prototype.handleFormSubmissionResponse = function (data) {\n            Str.get_string('userupdated', 'filter_envf', data).done(\n                (str) => {\n                    Notification.addNotification({\n                        message: str,\n                        type: \"info\"\n                    });\n                }\n            );\n        };\n        /**\n         * Private method\n         *\n         * @method handleFormSubmissionFailure\n         * @private\n         * @param {Event} e Form submission failure.\n         */\n        UserForm.prototype.handleFormSubmissionFailure = function (data) {\n            Str.get_string('userupdated', 'filter_envf', data).done(\n                (str) => {\n                    Notification.addNotification({\n                        message: str,\n                        type: \"warning\"\n                    });\n                }\n            );\n\n        };\n        return {\n            init: function (args) {\n                $(document).ready(function () {\n                    $('.' + args.classmarker).each(function () {\n                        var userid = $(this).data('userid');\n                        var contextid = $(this).data('contextid');\n                        var params = {};\n                        var currentform = $(this);\n                        Fragment.loadFragment('filter_envf', 'userprofile_form', contextid, params)\n                            .then(function (form, js) {\n                                Templates.replaceNodeContents(currentform, form, js);\n                                new UserForm(currentform, contextid, userid); // Bind the form.\n                            });\n                    });\n                });\n            }\n        };\n    }\n);"],"names":["define","$","Str","Fragment","Templates","Ajax","Notification","UserForm","formelement","contextid","userid","formelementcontainer","on","this","submitFormAjax","bind","validUserFields","prototype","e","preventDefault","changeEvent","document","createEvent","initEvent","find","each","index","element","dispatchEvent","invalid","merge","length","first","focus","params","JSON","stringify","serialize","userform","loadFragment","then","form","js","replaceNodeContents","children","data","formDataCombined","serializeArray","reduce","acc","item","includes","name","value","undefined","_typeof","call","methodname","args","userdata","done","handleFormSubmissionResponse","fail","handleFormSubmissionFailure","get_string","str","addNotification","message","type","init","ready","classmarker","currentform"],"mappings":";;;;;;;;IAQAA,qCAAO,CAAC,SACA,WACA,gBACA,iBACA,YACA,sBAEJ,SAAUC,EACAC,IACAC,SACAC,UACAC,KACAC,kBAEFC,SAAW,SAAUC,YAAaC,UAAWC,aACxCC,qBAAuBH,iBACvBC,UAAYA,eACZC,OAASA,OACdF,YAAYI,GAAG,SAAU,OAAQC,KAAKC,eAAeC,KAAKF,QAG1DG,gBAAkB,CAClB,KACA,WACA,OACA,YACA,YACA,WACA,QACA,cACA,OACA,UACA,WACA,cACA,cACA,oBACA,mBACA,aACA,gBACA,YACA,MACA,MACA,QACA,MACA,QACA,MACA,WACA,cACA,aACA,SACA,SACA,UACA,OACA,eACA,QACA,aACA,eACA,sBASJT,SAASU,UAAUH,eAAiB,SAAUI,GAE1CA,EAAEC,qBAEEC,YAAcC,SAASC,YAAY,cACvCF,YAAYG,UAAU,UAAU,GAAM,OAMlCf,YAAcP,EAAEY,KAAKF,sBAAsBa,KAAK,QACpDhB,YAAYgB,KAAK,UAAUC,MAAK,SAAUC,MAAOC,SAC7CA,QAAQC,cAAcR,oBAItBS,QAAU5B,EAAE6B,MACZtB,YAAYgB,KAAK,yBACjBhB,YAAYgB,KAAK,cAIjBK,QAAQE,OACRF,QAAQG,QAAQC,iBAGhBtB,qBAAuBE,KAAKF,qBAE5BuB,OAAS,cADEC,KAAKC,UAAU5B,YAAY6B,cAItCC,SAAWzB,KAEfV,SAASoC,aAAa,cAAe,mBACjC1B,KAAKJ,UACLyB,QACCM,MAAK,SAAUC,KAAMC,OAClBtC,UAAUuC,oBAAoBhC,qBAAsB8B,KAAMC,IACtD/B,qBAAqBiC,SAAS,0BAA0BC,KAAK,aAAc,KACvEC,iBAAmB7C,EAAEU,qBAAqBa,KAAK,SAC9CuB,iBACAC,QAAO,SAAUC,IAAKC,aACflC,gBAAgBmC,SAASD,KAAKE,QAC9BH,IAAIC,KAAKE,MAAQF,KAAKG,OAEnBJ,MACR,SACwCK,IAA3CC,QAAOT,iBAAgB,qBAChBA,iBAAgB,iBAEiBQ,IAAxCC,QAAOT,iBAAgB,kBAChBA,iBAAgB,SAG3BzC,KAAKmD,KAAK,CAAC,CACPC,WAAY,0BACZC,KAAM,CAACC,SAAUb,kBACjBc,KAAMtB,SAASuB,6BAA6B9C,KAAKuB,SAAUQ,kBAC3DgB,KAAMxB,SAASyB,4BAA4BhD,KAAKuB,SAAUQ,2BAc9EvC,SAASU,UAAU4C,6BAA+B,SAAUhB,MACxD3C,IAAI8D,WAAW,cAAe,cAAenB,MAAMe,MAC/C,SAACK,KACG3D,aAAa4D,gBAAgB,CACzBC,QAASF,IACTG,KAAM,aAYtB7D,SAASU,UAAU8C,4BAA8B,SAAUlB,MACvD3C,IAAI8D,WAAW,cAAe,cAAenB,MAAMe,MAC/C,SAACK,KACG3D,aAAa4D,gBAAgB,CACzBC,QAASF,IACTG,KAAM,gBAMf,CACHC,KAAM,SAAUX,MACZzD,EAAEoB,UAAUiD,OAAM,WACdrE,EAAE,IAAMyD,KAAKa,aAAa9C,MAAK,eACvBf,OAAST,EAAEY,MAAMgC,KAAK,UACtBpC,UAAYR,EAAEY,MAAMgC,KAAK,aAEzB2B,YAAcvE,EAAEY,MACpBV,SAASoC,aAAa,cAAe,mBAAoB9B,UAF5C,IAGR+B,MAAK,SAAUC,KAAMC,IAClBtC,UAAUuC,oBAAoB6B,YAAa/B,KAAMC,QAC7CnC,SAASiE,YAAa/D,UAAWC"}